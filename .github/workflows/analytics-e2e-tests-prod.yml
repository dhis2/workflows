name: 'e2e-prod'

# Requirements:
#
# - Customize environment variables:
#     BASE_URL_INSTANCES: Set the base url for the instances, e.g. https://test.e2e.dhis2.org
#     NAME_PATTERN_PROD_INSTANCES: Set the name pattern for your instances. {version} will be replaced by "[majorVersion].[minorVersion]"
#
# - Other optional customizations:
#     containers: Set the matrix containers array for the e2e-prod job. The number of parallel Cypress instances running for each backend version will equal the array length.
#
# - Set status check as required:
#     We recommend setting "e2e-tests-success"  as a required step in your workflow.

on:
    workflow_call:
        inputs:
            should_record:
                required: false
                type: boolean
                default: false
            spec-group:
                required: false
                type: string
        secrets:
            username:
                required: true
            password:
                required: true
            recordkey:
                required: true

env:
    BASE_URL_INSTANCES: https://test.e2e.dhis2.org
    NAME_PATTERN_PROD_INSTANCES: 'analytics-{version}'

concurrency:
    group: e2e-prod-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

defaults:
    run:
        shell: bash

jobs:
    compute-prod-versions:
        runs-on: ubuntu-latest
        outputs:
            versions: ${{ steps.prod-versions.outputs.versions }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Output prod version urls
              id: prod-versions
              uses: dhis2/action-supported-legacy-versions@feat/support-hardcoded-max-version
              with:
                  dev-version: "2.43"

    e2e-prod:
        needs: compute-prod-versions
        runs-on: ubuntu-latest
        env:
            CI_BUILD_ID: ${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}
            BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
            PR_TITLE: ${{ github.event.pull_request.title }}
            DHIS2_VERSION: ${{ matrix.versions }}
        strategy:
            fail-fast: false
            matrix:
                versions: ${{ fromJSON(needs.compute-prod-versions.outputs.versions) }}
                spec-group: ${{ fromJson(inputs.spec-group) }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 20.x
            - uses: browser-actions/setup-chrome@v1
              with:
                  chrome-version: stable
            - run: |
                  echo "BROWSER_PATH=$(which chrome)" >> $GITHUB_ENV

            - name: Compute prod instance url
              id: instance-url
              run: |
                  url=${BASE_URL_INSTANCES%/}/${NAME_PATTERN_PROD_INSTANCES/"{version}"/$version}
                  echo "url=$url" >> $GITHUB_OUTPUT
                  echo "url: $url"
              env:
                  version: ${{ matrix.versions }}

            - name: Debug spec-group and should_record
              run: |
                  echo "spec-group: ${{ toJson(matrix.spec-group) }}"
                  echo "should_record: ${{ inputs.should_record }}"

            - name: Debug Test Parameters
              run: |
                  echo "Record: ${{ inputs.should_record }}"
                  echo "Parallel: ${{ inputs.should_record }}"
                  echo "Browser: chrome"
                  echo "Specs: ${{ join(matrix.spec-group.tests, ',') }}"
                  echo "Group: ${{ inputs.should_record && format('e2e-chrome-parallel-{0}-{1}', matrix.versions, matrix.spec-group.id) || '' }}"
                  echo "CI Build ID: ${{ inputs.should_record && github.run_id || '' }}"

            - name: Run e2e tests
              uses: cypress-io/github-action@v5
              with:
                  start: yarn d2-app-scripts start
                  wait-on: 'http://localhost:3000'
                  wait-on-timeout: 300
                  record: ${{ inputs.should_record }}
                  parallel: ${{ inputs.should_record }}
                  browser: chrome
                  spec: ${{ join(matrix.spec-group.tests, ',') }}
                  group: ${{ inputs.should_record && format('e2e-chrome-parallel-{0}-{1}', matrix.versions, matrix.spec-group.id) || '' }}
                  ci-build-id: ${{ inputs.should_record && github.run_id || '' }}
              env:
                  CI: true
                  BROWSER: none
                  CYPRESS_RECORD_KEY: ${{ secrets.recordkey }}
                  CYPRESS_dhis2BaseUrl: ${{ steps.instance-url.outputs.url }}
                  CYPRESS_dhis2InstanceVersion: ${{ matrix.versions }}
                  CYPRESS_dhis2Username: ${{ secrets.username }}
                  CYPRESS_dhis2Password: ${{ secrets.password }}
                  CYPRESS_networkMode: live
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    e2e-tests-success:
        needs: e2e-prod
        if: ${{ success() || failure() }}
        runs-on: ubuntu-latest
        steps:
            - run: if [ $result != 'success' ]; then exit 1; fi;
              env:
                  result: ${{ needs.e2e-prod.result }}
